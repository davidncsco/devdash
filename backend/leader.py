from fastapi import Request, FastAPI
from fastapi.staticfiles import StaticFiles
from fastapi.templating import Jinja2Templates
import pandas as pd
from utils import load_db

from database import (
    fetch_leaderboard_users,
)

app = FastAPI()

# Added to create path to static files for all question images
# app.mount("/static", StaticFiles(directory="data/questions"),name="static")

# Migrate code from Leaderboard project here for now. This should be done in ReactJS as a
# frontend component.        
templates = Jinja2Templates(directory="data")
app.mount("/template", StaticFiles(directory="data"),name="template")
    
MAX_USERS_TO_DISPLAY = 15

@app.get('/',
         description="Get users who completed challenge with time recorded")
async def get_leaderboard_users(request: Request):
    response = await fetch_leaderboard_users()
    response.sort(key=lambda x: x.timetaken)
    users_dict = []
    count = 0
    for x in response: 
        if (x.timetaken > 0) and (count < MAX_USERS_TO_DISPLAY):
            user = x.__dict__
            user.pop('start')       # Remove start optional field generated by User model
            users_dict.append(user)
            count += 1
    df = pd.DataFrame(users_dict)
    df.index = df.index + 1     # Change index starting from 1 instead of 0
    return templates.TemplateResponse('leaders.html', context={'request': request, 'data': df.to_html()})